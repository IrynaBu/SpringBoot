spring.datasource.driverClassName=org.postgresql.Driver
spring.datasource.url=jdbc:postgresql://localhost:5432/spring-boot
spring.datasource.username=postgres
spring.datasource.password=password

# Show or not log for each sql query
spring.jpa.show-sql=true
# Hibernate ddl auto (create, create-drop, update)
#the database schema will be automatically created (and updated),
#creating tables and columns, accordingly to java entities found in the project.
spring.jpa.hibernate.ddl-auto=update
# Naming strategy
spring.jpa.hibernate.naming-strategy=org.hibernate.cfg.ImprovedNamingStrategy
# Use spring.jpa.properties.* for Hibernate native properties (the prefix is
# stripped before adding them to the entity manager)
# The SQL dialect makes Hibernate generate better SQL for the chosen database
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.PostgreSQLDialect
# The SQL dialect makes Hibernate generate better SQL for the chosen database
spring.jpa.hibernate.dialect=org.hibernate.dialect.PostgreSQLDialect
# Hibernate ddl auto (create, create-drop, update)
spring.jpa.hibernate.hbm2ddl.auto=update

# Charset of HTTP requests and responses. Added to the "Content-Type" header if not set explicitly.
spring.http.encoding.charset=UTF-8
# Enable http encoding support.
spring.http.encoding.enabled=true
spring.http.client.encoding.override=UTF-8
spring.http.file.encoding=UTF8
# Force the encoding to the configured charset on HTTP requests and responses.
spring.http.encoding.force=true
# Preferred JSON mapper to use for HTTP message conversion. Set to "gson" to force the use of Gson when both it and Jackson are on the classpath.
spring.http.converters.preferred-json-mapper=jackson
# Maps file extensions to media types for content negotiation.
spring.mvc.media-types.*=application/json
# Enable support of multi-part uploads.
spring.http.multipart.enabled=true

logging.config=log4j.properties